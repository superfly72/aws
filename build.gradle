/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'royh' at '19/05/17 2:40 PM' with Gradle 2.5
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.5/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'kinesis-spring-boot'
    version =  '1.0.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile ("org.springframework.boot:spring-boot-starter-web")
    compile ('org.slf4j:slf4j-api:1.7.12')
    compile ('com.amazonaws:amazon-kinesis-producer:0.12.4')
    compile ('io.springfox:springfox-swagger2')
    compile ('io.springfox:springfox-swagger-ui')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile ("org.springframework.boot:spring-boot-starter-test")
    testCompile ('junit:junit:4.12')
}
